const NUMBER_OF_FAKE_USERS = 1000;
const BATCH_SIZE = 50;
const PAGE_SIZE = 20;
const RATIO_OF_TOTAL_LISTINGS_TO_FETCH = 0.05;
const MIN_LISTINGS_TO_FETCH = 40;
const RATIO_OF_SOLD_LISTINGS = 0.3;

const SIMILARITY_DEPTHS = [
  { YEAR_RANGE: 0, MILEAGE_FACTOR: 0.075 },
  { YEAR_RANGE: 1, MILEAGE_FACTOR: 0.10 },
  { YEAR_RANGE: 3, MILEAGE_FACTOR: 0.30 },
  { YEAR_RANGE: 5, MILEAGE_FACTOR: 0.50 },
  { YEAR_RANGE: 5, MILEAGE_FACTOR: 0.00 } // no limit on mileage, but still around same generation of make/model
]
const MINIMUM_COMPS_REQUIRED = 10;

const EARTH_RADIUS_MILES = 3_959;
const RADIANS_PER_DEGREE = Math.PI / 180;

const MS_PER_DAY = 1000 * 60 * 60 * 24;

const MIN_LISTINGS_TO_FACTOR_IN_SELLER_LISTINGS = 3;
const SMOOTHING_K = 3;
const SELLER_FACTOR_MIN = 0.9;
const SELLER_FACTOR_MAX = 1.1;

const MILEAGE_SCALE_FACTOR = 2500;
const DEPTH_WEIGHT_BY_LEVEL = {
  1: 3.0,
  2: 1.5,
  3: 0.375,
  4: 0.125,
  5: 0.025,
  6: 0.0125,
  7: 0.008
};
const DEPTH_CONFIDENCE_PENALTIES = {
  1: 1.00,
  2: 0.90,
  3: 0.80,
  4: 0.70,
  5: 0.60,
  6: 0.30, // harsh drop (cars within same make)
  7: 0.20, // continued drop (competitor cars)
}
const MAX_COMPETITORS = 3;
const SOLD_LISTING_WEIGHT = .7;
const UNSOLD_LISTING_WEIGHT = .3;
const PROXIMITY_MIN_WEIGHT = .25;
const PROXIMITY_DISTANCE_FADE = 2500;
const DAYS_ON_MARKET_MIN_WEIGHT = .2;
const DAYS_IN_MONTH = 30;

const ROUNDING_DIGIT_DELTA = 4;
const PERCENTAGE_CONVERTER = 100;

const MINIMUM_DATA_POINTS_REQUIRED = 3;
const RECENCY_DECAY_DAYS = 180;
const PERCENT_BUCKETS = [-10, -5, 0, 5, 10]

const CACHE_RECOMMENDED_LISTINGS_EXP_TIME = 60 * 60 * 4; // 4 hours

const MIN_YEAR = 1885;
const MIN_VIN_LENGTH = 5;
const MAX_VIN_LENGTH = 17;

const MIN_NAME_LENGTH = 2;
const MAX_NAME_LENGTH = 100;
const MIN_USERNAME_LENGTH = 3;
const MAX_USERNAME_LENGTH = 20;
const MIN_PASSWORD_LENGTH = 6;
const MAX_PASSWORD_LENGTH = 64;

const MAX_VIEWED_FILTERS = 5;

const COLORS = ['beige', 'black', 'blue', 'brown', 'gold', 'gray', 'green', 'orange', 'purple', 'red', 'silver', 'white', 'yellow'];
const NUM_POPULAR_LISTINGS = 20;

const SPREAD_EXP_FACTOR = 10;

const NUM_RECENTLY_CLICKED_LISTINGS = 50;
const DAY_IN_MS = 1000 * 60 * 60 * 24;
const NUM_RECOMMENDED_LISTINGS = 20;

const ROUND_TO_NEAREST_HUNDRED = (number) => Math.round(number / 100) * 100;
const FORMAT_TO_PRICE = (price) => price.toLocaleString('en-US');

module.exports = {
  NUMBER_OF_FAKE_USERS,
  BATCH_SIZE,
  PAGE_SIZE,
  RATIO_OF_TOTAL_LISTINGS_TO_FETCH,
  MIN_LISTINGS_TO_FETCH,
  RATIO_OF_SOLD_LISTINGS,
  SIMILARITY_DEPTHS,
  MINIMUM_COMPS_REQUIRED,
  EARTH_RADIUS_MILES,
  RADIANS_PER_DEGREE,
  MS_PER_DAY,
  MIN_LISTINGS_TO_FACTOR_IN_SELLER_LISTINGS,
  SMOOTHING_K,
  SELLER_FACTOR_MIN,
  SELLER_FACTOR_MAX,
  MILEAGE_SCALE_FACTOR,
  DEPTH_WEIGHT_BY_LEVEL,
  DEPTH_CONFIDENCE_PENALTIES,
  MAX_COMPETITORS,
  SOLD_LISTING_WEIGHT,
  UNSOLD_LISTING_WEIGHT,
  PROXIMITY_MIN_WEIGHT,
  PROXIMITY_DISTANCE_FADE,
  DAYS_ON_MARKET_MIN_WEIGHT,
  DAYS_IN_MONTH,
  ROUNDING_DIGIT_DELTA,
  PERCENTAGE_CONVERTER,
  MINIMUM_DATA_POINTS_REQUIRED,
  RECENCY_DECAY_DAYS,
  PERCENT_BUCKETS,
  CACHE_RECOMMENDED_LISTINGS_EXP_TIME,
  MIN_YEAR,
  MIN_VIN_LENGTH,
  MAX_VIN_LENGTH,
  MIN_NAME_LENGTH,
  MAX_NAME_LENGTH,
  MIN_USERNAME_LENGTH,
  MAX_USERNAME_LENGTH,
  MIN_PASSWORD_LENGTH,
  MAX_PASSWORD_LENGTH,
  MAX_VIEWED_FILTERS,
  COLORS,
  NUM_POPULAR_LISTINGS,
  SPREAD_EXP_FACTOR,
  NUM_RECENTLY_CLICKED_LISTINGS,
  DAY_IN_MS,
  NUM_RECOMMENDED_LISTINGS,
  ROUND_TO_NEAREST_HUNDRED,
  FORMAT_TO_PRICE
}